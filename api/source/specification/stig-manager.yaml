openapi: 3.0.1
info:
  title: STIG Management API
  description: >-
    An API for managing evaluations of Security Technical Implementation Guide
    (STIG) assessments.
  contact:
    name: Carl Smigielski
    email: carl.a.smigielski@saic.com
  version: 1.0.0
servers:
  - url: 'http://localhost:54000/stig-manager/api'
paths:
  /packages:
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
    get:
      tags:
        - Package
      summary: Return a list of Packages accessible to the requester
      description: ''
      operationId: getPackages
      parameters:
        - $ref: '#/components/parameters/NameQuery'
        - $ref: '#/components/parameters/PackageWorkflowQuery'
      responses:
        '200':
          description: PackageProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Package'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
    post:
      tags:
        - Package
      summary: Create a Package
      description: ''
      operationId: createPackage
      parameters:
        - $ref: '#/components/parameters/PackageProjectionQuery'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageCreateOrReplace'
      responses:
        '201':
          description: PackageProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PackageProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  '/packages/{packageId}':
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
      - name: packageId
        in: path
        description: A path parameter that indentifies a Package
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/PackageProjectionQuery'
    get:
      tags:
        - Package
      summary: Return a Package
      description: ''
      operationId: getPackage
      responses:
        '200':
          description: PackageProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
    patch:
      tags:
        - Package
      summary: Merge provided properties with a Package
      description: ''
      operationId: updatePackage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageUpdate'
      responses:
        '200':
          description: PackageProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
    put:
      tags:
        - Package
      summary: Set all properties of a Package
      operationId: replacePackage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageCreateOrReplace'
      responses:
        '200':
          description: PackageProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
    delete:
      tags:
        - Package
      summary: Delete a Package
      operationId: deletePackage
      responses:
        '200':
          description: PackageProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  '/packages/{packageId}/checklists/{benchmarkId}/{revisionStr}':
    parameters:
      - name: packageId
        in: path
        description: A path parameter that indentifies a Package
        required: true
        schema:
          type: integer
      - name: benchmarkId
        in: path
        description: A path parameter that indentifies a STIG
        required: true
        schema:
          type: string
      - name: revisionStr
        in: path
        description: >-
          A path parameter that indentifies a STIG revision [
          V{version_num}R{release_num} | 'latest' ]
        required: true
        schema:
          pattern: ^(V\d+R\d+(\.\d+)?|latest)$
          type: string
    get:
      tags:
        - Package
      summary: Return the Checklist for the supplied Package and STIG
      operationId: getChecklistByPackageStig
      responses:
        '200':
          description: PackageProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChecklistPackageStig'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
  '/packages/{packageId}/findings':
    parameters:
      - $ref: '#/components/parameters/PackageIdPath'
      - name: acceptedOnly
        in: query
        schema:
          type: boolean
          default: false
      - $ref: '#/components/parameters/BenchmarkIdQuery'
      - $ref: '#/components/parameters/AssetIdQuery'
      - $ref: '#/components/parameters/FindingProjectionQuery'
    get:
      tags:
        - Package
      summary: Return the Findings for the specified Package
      operationId: getFindingsByPackage
      responses:
        '200':
          description: PackageFinding response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FindingProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
  '/packages/{packageId}/stigs':
    parameters:
      - $ref: '#/components/parameters/PackageIdPath'
    get:
      tags:
        - Package
      summary: Return the STIGs mapped in the specified Package
      operationId: getStigsByPackage
      responses:
        '200':
          description: PackageFinding response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/STIG'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
  /assets:
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
      - $ref: '#/components/parameters/AssetProjectionQuery'
    get:
      tags:
        - Asset
      summary: Return a list of Assets accessible to the requester
      operationId: getAssets
      parameters:
        - name: packageId
          required: true
          in: query
          description: Selects Assets mapped to a Package
          schema:
            type: integer
        - name: benchmarkId
          in: query
          description: Selects Assets mapped to a STIG
          schema:
            type: string
      responses:
        '200':
          description: AssetProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
    post:
      tags:
        - Asset
      summary: Create an Asset
      operationId: createAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetCreateOrReplace'
      responses:
        '201':
          description: AssetProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  '/assets/{assetId}':
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
      - $ref: '#/components/parameters/AssetIdPath'
      - $ref: '#/components/parameters/AssetProjectionQuery'
    get:
      tags:
        - Asset
      summary: Return an Asset
      operationId: getAsset
      responses:
        '200':
          description: AssetProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
    patch:
      tags:
        - Asset
      summary: Merge provided properties with an Asset
      operationId: updateAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetUpdate'
      responses:
        '200':
          description: AssetProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
    put:
      tags:
        - Asset
      summary: Set all properties of an Asset
      operationId: replaceAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetCreateOrReplace'
      responses:
        '200':
          description: AssetProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
    delete:
      tags:
        - Asset
      summary: Delete an Asset
      operationId: deleteAsset
      responses:
        '200':
          description: AssetProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  '/assets/{assetId}/checklists/{benchmarkId}/{revisionStr}':
    parameters:
      - name: assetId
        in: path
        description: A path parameter that indentifies an Asset
        required: true
        schema:
          type: integer
      - name: benchmarkId
        in: path
        description: A path parameter that indentifies a STIG
        required: true
        schema:
          type: string
      - name: revisionStr
        in: path
        description: >-
          A path parameter that indentifies a STIG revision [
          V{version_num}R{release_num} | 'latest' ]
        required: true
        schema:
          pattern: ^(V\d+R\d+(\.\d+)?|latest)$
          type: string
    get:
      tags:
        - Asset
      summary: Return the Checklist for the supplied Asset and STIG
      operationId: getChecklistByAssetStig
      parameters:
        - name: format
          in: query
          description: The format of the response. Default if missing is 'json'
          schema:
            type: string
            default: json
            enum:
              - json
              - ckl
      responses:
        '200':
          description: Review response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChecklistAssetStig'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChecklistCkl'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  /reviews:
    get:
      tags:
        - Review
      summary: Return a list of Reviews accessible to the requester
      description: >
        | RBAC | User Level 1 | User Level 2 | User Level 3 | elevated |

        |-----|-----|-------|-------|-------|

        |Response| All reviews | All departmental reviews | All mapped reviews 
        | NA  |
      operationId: getReviews
      parameters:
        - name: packageId
          required: true
          in: query
          description: Selects Reviews mapped to a Package
          schema:
            type: integer
        - $ref: '#/components/parameters/ReviewResultQuery'
        - $ref: '#/components/parameters/ReviewActionQuery'
        - $ref: '#/components/parameters/ReviewStatusQuery'
        - name: ruleId
          in: query
          description: Selects Reviews of a Rule
          schema:
            type: string
        - name: userId
          in: query
          description: Selects Reviews last saved by a User
          schema:
            type: integer
        - name: assetId
          in: query
          description: Selects Reviews mapped to an Asset
          schema:
            type: integer
        - name: benchmarkId
          in: query
          description: Selects Reviews mapped to a STIG; requires revisionStr
          schema:
            type: string
        - name: revisionStr
          in: query
          description: >-
            Selects Reviews mapped to a Revision [ V{version_num}R{release_num}
            | 'latest' ]; requires benchmarkId
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
        - $ref: '#/components/parameters/ReviewProjectionQuery'
      responses:
        '200':
          description: ReviewProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
    post:
      tags:
        - Review
      summary: >-
        Import one or more Reviews from a JSON body, a STIGViewer CKL file, or
        an SCC XCCDF file
      description: |
      operationId: importReviews
      parameters:
        - name: packageId
          required: true
          in: query
          description: Selects Reviews mapped to a Package
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ReviewPut'
          multipart/form-data:
            schema:
              type: object
              required:
                - importFile
              properties:
                assetId:
                  description: 'If provided, file contents will be checked for match'
                  type: string
                benchmarkId:
                  description: 'If provided, file contents will be checked for match'
                  type: string
                importFile:
                  description: >-
                    Extension .ckl from STIGVewer or .xml from SCAP Compliance
                    Checker (SCC)
                  type: string
                  format: binary
      responses:
        '200':
          description: ReviewProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  '/reviews/{assetId}':
    parameters:
      - name: assetId
        in: path
        description: A path parameter that indentifies an Asset
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/ReviewProjectionQuery'
    get:
      tags:
        - Review
      summary: Return a list of Reviews for an Asset
      operationId: getReviewsByAssetId
      parameters:
        - $ref: '#/components/parameters/ReviewResultQuery'
        - $ref: '#/components/parameters/ReviewActionQuery'
        - $ref: '#/components/parameters/ReviewStatusQuery'
        - name: benchmarkId
          in: query
          description: Selects Reviews mapped to a STIG; requires revisionStr
          schema:
            type: string
        - name: revisionStr
          in: query
          description: >-
            Selects Reviews mapped to a Revision [ V{version_num}R{release_num}
            | 'latest' ]; requires benchmarkId
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
      responses:
        '200':
          description: ReviewProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
  '/reviews/{assetId}/{ruleId}':
    parameters:
      - name: assetId
        in: path
        description: A path parameter that indentifies an Asset
        required: true
        schema:
          type: integer
      - name: ruleId
        in: path
        description: A path parameter that indentifies a Rule
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/ReviewIndividualProjectionQuery'
    get:
      tags:
        - Review
      summary: Return the Review for an Asset and Rule
      operationId: getReviewByAssetRule
      responses:
        '200':
          description: ReviewProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewWithHistoryProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
    put:
      tags:
        - Review
      summary: Set all properties of a Review
      description: >-
        Create a new Review, or update all properties of an existing Review,
        setting missing properties to null
      operationId: putReview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewAssetRulePut'
      responses:
        '200':
          description: ReviewProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewWithHistoryProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
    patch:
      tags:
        - Review
      summary: Merge provided properties with a Review
      description: 'Update the given properties of a Review, if it exists'
      operationId: patchReview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewAssetRulePatch'
      responses:
        '200':
          description: ReviewProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewWithHistoryProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
    delete:
      tags:
        - Review
      summary: Delete a Review
      operationId: deleteReview
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
      responses:
        '200':
          description: ReviewProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewWithHistoryProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  /user:
    get:
      tags:
        - User
      summary: Return the requester's user information
      operationId: getUserObject
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:user:read'
  /users:
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
      - $ref: '#/components/parameters/UserProjectionQuery'
    get:
      tags:
        - User
      summary: Return a list of Users accessible to the requester
      operationId: getUsers
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:user:read'
    post:
      tags:
        - User
      summary: Create a User
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateOrReplace'
      responses:
        '201':
          description: UserProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:user'
  '/users/{userId}':
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
      - $ref: '#/components/parameters/UserProjectionQuery'
      - name: userId
        in: path
        description: A path parameter that indentifies an Asset
        required: true
        schema:
          type: integer
    get:
      tags:
        - User
      summary: Return a User
      operationId: getUserByUserId
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:user:read'
    patch:
      tags:
        - User
      summary: Merge provided properties with a User
      operationId: updateUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:user'
    put:
      tags:
        - User
      summary: Set all properties of a User
      operationId: replaceUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateOrReplace'
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:user'
    delete:
      tags:
        - User
      summary: Delete a User
      operationId: deleteUser
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:user'
  /stigs:
    get:
      tags:
        - STIG
      summary: Return a list of available STIGs
      operationId: getSTIGs
      parameters:
        - name: title
          in: query
          description: A string found anywhere in a STIG title
          schema:
            type: string
      responses:
        '200':
          description: STIG response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/STIG'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
    post:
      tags:
        - STIG
      summary: Import a new STIG
      operationId: importManualBenchmark
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - replace
              properties:
                replace:
                  type: string
                  enum:
                    - 'true'
                    - 'false'
                importFile:
                  type: string
                  format: binary
      responses:
        '200':
          description: The added STIG
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STIG'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig'
      x-rbac:
        - admin
  '/stigs/{benchmarkId}':
    get:
      tags:
        - STIG
      summary: Return properties of the specified STIG
      operationId: getStigById
      parameters:
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
      responses:
        '200':
          description: STIG response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STIG'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
    delete:
      tags:
        - STIG
      summary: Deletes a STIG (*** and all revisions ***)
      operationId: deleteStigById
      parameters:
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The deleted STIG
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STIG'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig'
      x-rbac:
        - admin
  '/packages/{packageId}/stigs/{benchmarkId}/assets':
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
      - $ref: '#/components/parameters/PackageIdPath'
      - $ref: '#/components/parameters/StigAssetProjectionQuery'
      - name: benchmarkId
        in: path
        description: A path parameter that indentifies a STIG
        required: true
        schema:
          type: string
    get:
      tags:
        - Asset
      summary: Return Assets mapped to a STIG in the specified Package
      operationId: getAssetsByBenchmarkId
      description: ''
      responses:
        '200':
          description: Revision response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StigAssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
    put:
      tags:
        - Asset
      summary: Set the Assets mapped to a STIG
      description: ''
      operationId: setStigAssetsByBenchmarkId
      requestBody:
        required: true
        description: A list of assetIds from the specified Package
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
      responses:
        '200':
          description: Revision response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StigAssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  '/stigs/{benchmarkId}/revisions':
    get:
      tags:
        - STIG
      summary: Return a list of revisions for the specified STIG
      operationId: getRevisionsByBenchmarkId
      parameters:
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Revision response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Revision'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  '/stigs/{benchmarkId}/revisions/{revisionStr}':
    get:
      tags:
        - STIG
      summary: Return metadata for the specified revision of a STIG
      operationId: getRevisionByString
      parameters:
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
        - name: revisionStr
          in: path
          description: >-
            A path parameter that indentifies a STIG revision [
            V{version_num}R{release_num} | 'latest' ]
          required: true
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
      responses:
        '200':
          description: Revision response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
    delete:
      tags:
        - STIG
      summary: Deletes the specified revision of a STIG
      operationId: deleteRevisionByString
      parameters:
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
        - name: revisionStr
          in: path
          description: >-
            A path parameter that indentifies a STIG revision [
            V{version_num}R{release_num} | 'latest' ]
          required: true
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
      responses:
        '200':
          description: The deleted Revision
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig'
      x-rbac:
        - admin
  '/stigs/{benchmarkId}/revisions/{revisionStr}/groups':
    get:
      tags:
        - STIG
      summary: Return the list of groups for the specified revision of a STIG.
      operationId: getGroupsByRevision
      parameters:
        - $ref: '#/components/parameters/GroupProjectionQuery'
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
        - name: revisionStr
          in: path
          description: >-
            A path parameter that indentifies a STIG revision [
            V{version_num}R{release_num} | 'latest' ]
          required: true
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
      responses:
        '200':
          description: Group response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  '/stigs/{benchmarkId}/revisions/{revisionStr}/groups/{groupId}':
    get:
      tags:
        - STIG
      summary: >-
        Return the rules, checks and fixes for a Group from a specified revision
        of a STIG.
      description: None
      operationId: getGroupByRevision
      parameters:
        - $ref: '#/components/parameters/GroupProjectionQuery'
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
        - name: revisionStr
          in: path
          description: >-
            A path parameter that indentifies a STIG revision [
            V{version_num}R{release_num} | 'latest' ]
          required: true
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
        - name: groupId
          in: path
          description: A path parameter that indentifies a Group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Group response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  '/stigs/{benchmarkId}/revisions/{revisionStr}/rules':
    get:
      tags:
        - STIG
      summary: Return rule data for the specified revision of a STIG.
      operationId: getRulesByRevision
      parameters:
        - $ref: '#/components/parameters/RuleProjectionQuery'
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
        - name: revisionStr
          in: path
          description: >-
            A path parameter that indentifies a STIG revision [
            V{version_num}R{release_num} | 'latest' ]
          required: true
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
      responses:
        '200':
          description: Rule response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuleProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  '/stigs/{benchmarkId}/revisions/{revisionStr}/rules/{ruleId}':
    get:
      tags:
        - STIG
      summary: Return rule data for the specified Rule in a revision of a STIG.
      operationId: getRuleByRevision
      parameters:
        - $ref: '#/components/parameters/RuleProjectionQuery'
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
        - name: revisionStr
          in: path
          description: >-
            A path parameter that indentifies a STIG revision [
            V{version_num}R{release_num} | 'latest' ]
          required: true
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
        - name: ruleId
          in: path
          description: A path parameter that indentifies a Rule
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Rule response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuleDetailProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  '/stigs/rules/{ruleId}':
    get:
      tags:
        - STIG
      summary: >-
        Return the defintion and associated checks and fixes for the specified
        Rule
      operationId: getRuleByRuleId
      parameters:
        - $ref: '#/components/parameters/RuleProjectionQuery'
        - name: ruleId
          in: path
          description: A path parameter that indentifies a Rule
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  '/stigs/{benchmarkId}/revisions/{revisionStr}/ccis':
    get:
      tags:
        - STIG
      summary: Return a list of CCIs from a STIG revision
      operationId: getCcisByRevision
      parameters:
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
        - name: revisionStr
          in: path
          description: >-
            A path parameter that indentifies a STIG revision [
            V{version_num}R{release_num} | 'latest' ]
          required: true
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
      responses:
        '200':
          description: CCI response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CciListItem'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  '/stigs/ccis/{cci}':
    get:
      tags:
        - STIG
      summary: Return data for the specified CCI
      operationId: getCci
      parameters:
        - name: cci
          in: path
          description: A path parameter that indentifies a CCI
          required: true
          schema:
            type: string
      responses:
        '200':
          description: CCI response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cci'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  /op/version:
    get:
      tags:
        - Operation
      summary: Return version information
      operationId: getVersion
      responses:
        '200':
          description: Version response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
  /op/appdata:
    get:
      tags:
        - Operation
      summary: Export application data
      operationId: getAppData
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
      responses:
        '200':
          description: Exported data
          content:
            application/json:
              schema:
                type: object
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - stig-manager
    post:
      tags:
        - Operation
      summary: Import and overwrite application data
      operationId: replaceAppData
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                packages:
                  type: string
          multipart/form-data:
            schema:
              type: object
              properties:
                importFile:
                  type: string
                  format: binary
      responses:
        '200':
          description: Import successful
          content:
            application/json:
              schema:
                type: object
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - stig-manager
components:
  schemas:
    AccessLevel:
      type: integer
      minimum: 1
      maximum: 3
    ApiVersion:
      type: object
      properties:
        branch:
          type: string
        commit:
          type: string
        nearest-tag:
          type: string
    Asset:
      type: object
      properties:
        assetId:
          readOnly: true
          type: integer
        name:
          type: string
          nullable: false
        package:
          $ref: '#/components/schemas/PackageBasic'
        ip:
          type: string
          nullable: true
        nonnetwork:
          type: boolean
        metadata:
          type: object
    AssetBasic:
      type: object
      properties:
        assetId:
          type: integer
        name:
          type: string
    AssetCreateOrReplace:
      required:
        - name
        - packageId
        - ip
        - nonnetwork
        - metadata
        - stigReviewers
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: false
        packageId:
          description: The packageId mapped to this Asset
          type: integer
        ip:
          type: string
          nullable: true
        nonnetwork:
          type: boolean
        metadata:
          type: object
        stigReviewers:
          description: The benchmarkIds and reviewers mapped to this Asset
          type: array
          items:
            type: object
            properties:
              benchmarkId:
                type: string
              userIds:
                type: array
                items:
                  type: integer
    AssetForPackage:
      type: object
      properties:
        assetId:
          type: integer
        name:
          type: string
    AssetProjected:
      allOf:
        - $ref: '#/components/schemas/Asset'
        - type: object
          properties:
            adminStats:
              type: object
              properties:
                stigCount:
                  type: integer
                stigAssignedCount:
                  type: integer
            stigs:
              type: array
              description: The benchmarkIds mapped to this Asset
              items:
                $ref: '#/components/schemas/STIG'
            stigReviewers:
              type: array
              description: The benchmarkIds and reviewers mapped to this Asset
              items:
                type: object
                properties:
                  benchmarkId:
                    type: string
                  reviewers:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserBasic'
    AssetUpdate:
      properties:
        name:
          type: string
          nullable: false
        packageId:
          type: integer
          nullable: false
        ip:
          type: string
          nullable: true
        nonnetwork:
          type: boolean
        metadata:
          type: object
        stigReviewers:
          description: The benchmarkIds and reviewers mapped to this Asset
          type: array
          items:
            type: object
            properties:
              benchmarkId:
                type: string
              userIds:
                type: array
                items:
                  type: integer
    Cci:
      type: object
      properties:
        cci:
          type: string
        status:
          type: string
        publishdate:
          type: string
        contributor:
          type: string
        type:
          type: string
        defintion:
          type: string
        emassAp:
          $ref: '#/components/schemas/EmassAp'
        references:
          type: array
          items:
            $ref: '#/components/schemas/CciReferenceItem'
        stigs:
          type: array
          items:
            $ref: '#/components/schemas/RevisionBasic'
    CciBasic:
      type: object
      properties:
        cci:
          type: string
        emassAp:
          type: string
        controls:
          type: array
          items:
            $ref: '#/components/schemas/CciReferenceRev4'
    CciListItem:
      type: object
      properties:
        cci:
          type: string
        type:
          type: string
        references:
          type: array
          items:
            $ref: '#/components/schemas/CciReferenceItem'
    CciReferenceItem:
      type: object
      properties:
        creator:
          type: string
        title:
          type: string
        version:
          type: string
        location:
          type: string
        indexDisa:
          type: string
        textRefNist:
          type: string
        parentControl:
          type: string
    CciReferenceRev4:
      type: object
      properties:
        indexDisa:
          type: string
        textRefNist:
          type: string
        parentControl:
          type: string
    CciRuleItem:
      type: object
      properties:
        cci:
          type: string
        apAcronym:
          description: eMASS Assessment Procedure
          type: string
        control:
          description: NIST 800-53r4 control
          type: string
    Check:
      type: object
      properties:
        checkId:
          type: string
        content:
          type: string
    ChecklistAssetStig:
      type: object
      properties:
        ruleId:
          type: string
        ruleTitle:
          type: string
        groupId:
          type: string
        groupTitle:
          type: string
        severity:
          $ref: '#/components/schemas/RuleSeverity'
        autoCheckAvailable:
          type: boolean
        result:
          $ref: '#/components/schemas/ChecklistResult'
        autoResult:
          type: boolean
        status:
          $ref: '#/components/schemas/ChecklistStatus'
        reviewComplete:
          type: boolean
    ChecklistCkl:
      type: object
      description: The CKL format generated and read by DISA STIG VIewer
      xml:
        name: CHECKLIST
      properties:
        ASSET:
          type: object
          properties:
            ASSET_TYPE:
              type: string
            HOST_NAME:
              type: string
            HOST_IP:
              type: string
            HOST_MAC:
              type: string
            HOST_GUID:
              type: string
            HOST_FQDN:
              type: string
            TECH_AREA:
              type: string
            TARGET_KEY:
              type: string
        STIGS:
          type: object
          properties:
            iSTIG:
              type: object
              properties:
                STIG_INFO:
                  type: array
                  items:
                    type: object
                    properties:
                      SI_DATA:
                        type: object
                        properties:
                          SID_NAME:
                            type: string
                          SID_DATA:
                            type: string
                VULN:
                  type: array
                  items:
                    type: object
                    properties:
                      STIG_DATA:
                        type: array
                        items:
                          type: object
                          properties:
                            VULN_ATTRIBUTE:
                              type: string
                            ATTRIBUTE_DATA:
                              type: string
                      STATUS:
                        type: string
                        enum:
                          - Open
                          - NotAFinding
                          - Not_Applicable
                          - Not_Reviewed
                      FINDING_DETAILS:
                        type: string
                      COMMENTS:
                        type: string
                      SEVERITY_OVERRIDE:
                        type: string
                      SEVERITY_JUSTIFICATION:
                        type: string
    ChecklistPackageStig:
      type: object
      properties:
        ruleId:
          type: string
        ruleTitle:
          type: string
        groupId:
          type: string
        groupTitle:
          type: string
        severity:
          $ref: '#/components/schemas/RuleSeverity'
        autoCheckAvailable:
          type: boolean
        counts:
          type: object
          properties:
            results:
              type: object
              properties:
                pass:
                  type: integer
                fail:
                  type: integer
                notapplicable:
                  type: integer
                notchecked:
                  type: integer
            statuses:
              type: object
              properties:
                saved:
                  type: integer
                submitted:
                  type: integer
                accepted:
                  type: integer
                rejected:
                  type: integer
    ChecklistResult:
      description: The Review result
      type: string
      nullable: true
      enum:
        - fail
        - pass
        - notapplicable
        - null
    ChecklistStatus:
      type: string
      nullable: true
      enum:
        - saved
        - submitted
        - accepted
        - rejected
        - null
    EmassAp:
      type: object
      properties:
        apAcronym:
          type: string
        implementation:
          type: string
        assessmentProcedure:
          type: string
    EmassPoamRarRecord:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/EmassPoamRarStatus'
        control:
          type: string
        residualRisk:
          $ref: '#/components/schemas/RuleSeverity'
        mitigations:
          type: string
        completionDate:
          type: string
        milestone:
          type: string
        rarLikelihood:
          type: string
        rarRecommendedCorrectiveAction:
          type: string
        rarRemediationDescription:
          type: string
        rarComment:
          type: string
    EmassPoamRarRecordUpdate:
      type: object
      required:
        - status
        - control
        - residualRisk
        - mitigations
        - completionDate
        - milestone
        - rarLikelihood
        - rarRecommendedCorrectiveAction
        - rarRemediationDescription
        - rarComment
      properties:
        status:
          $ref: '#/components/schemas/EmassPoamRarStatus'
        control:
          type: string
        residualRisk:
          $ref: '#/components/schemas/RuleSeverity'
        mitigations:
          type: string
        completionDate:
          type: string
        milestone:
          type: string
        rarLikelihood:
          type: string
        rarRecommendedCorrectiveAction:
          type: string
        rarRemediationDescription:
          type: string
        rarComment:
          type: string
    EmassPoamRarStatus:
      type: string
      enum:
        - ongoing
        - completed
    Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    FindingProjected:
      type: object
      properties:
        ruleId:
          type: string
        ruleTitle:
          type: string
        groupId:
          type: string
        groupTitle:
          type: string
        severity:
          $ref: '#/components/schemas/RuleSeverity'
        ccis:
          type: array
          items:
            $ref: '#/components/schemas/CciBasic'
        benchmarkIds:
          type: array
          items:
            type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/AssetBasic'
    Fix:
      type: object
      properties:
        fixId:
          type: string
        text:
          type: string
    Group:
      type: array
      items:
        type: object
        properties:
          groupId:
            type: string
          title:
            type: string
    GroupProjected:
      allOf:
        - $ref: '#/components/schemas/Group'
        - type: object
          properties:
            rules:
              type: array
              items:
                $ref: '#/components/schemas/RuleAbbr'
    Package:
      type: object
      properties:
        packageId:
          readOnly: true
          type: integer
          nullable: false
        name:
          type: string
        workflow:
          $ref: '#/components/schemas/PackageWorkflow'
        metadata:
          type: object
    PackageBasic:
      type: object
      properties:
        packageId:
          type: integer
        name:
          type: string
    PackageCreateOrReplace:
      required:
        - name
        - workflow
        - metadata
        - grants
      additionalProperties: false
      type: object
      properties:
        name:
          type: string
        workflow:
          $ref: '#/components/schemas/PackageWorkflow'
        metadata:
          type: object
        grants:
          type: array
          items:
            type: object
            properties:
              userId:
                type: integer
              accessLevel:
                type: integer
    PackageGrant:
      type: object
      required:
        - packageId
        - accessLevel
      additionalProperties: false
      properties:
        packageId:
          type: integer
        accessLevel:
          type: integer
    PackageGrantLevel1:
      type: object
      required:
        - packageId
        - accessLevel
        - stigReviews
      properties:
        packageId:
          type: integer
        accessLevel:
          type: integer
          minimum: 1
          maximum: 1
        stigAssets:
          type: array
          items:
            type: object
            properties:
              benchmarkId:
                type: string
              assetId:
                type: integer
    PackageGrantLevel1Projected:
      type: object
      properties:
        packageId:
          type: integer
        accessLevel:
          type: integer
          minimum: 1
          maximum: 1
        stigAssets:
          type: array
          items:
            type: object
            properties:
              benchmarkId:
                type: string
              asset:
                type: object
                properties:
                  assetId:
                    type: integer
                  name:
                    type: string
    PackageGrantProjected:
      type: object
      additionalProperties: false
      properties:
        package:
          type: object
          properties:
            packageId:
              type: integer
            name:
              type: string
        accessLevel:
          type: integer
    PackageProjected:
      allOf:
        - $ref: '#/components/schemas/Package'
        - type: object
          properties:
            assets:
              type: array
              items:
                $ref: '#/components/schemas/AssetForPackage'
            stigs:
              type: array
              items:
                $ref: '#/components/schemas/STIG'
            grants:
              type: array
              items:
                $ref: '#/components/schemas/UserGrantProjected'
    PackageUpdate:
      additionalProperties: false
      type: object
      properties:
        name:
          type: string
        workflow:
          $ref: '#/components/schemas/PackageWorkflow'
        metadata:
          type: object
        grants:
          type: array
          items:
            type: object
            properties:
              userId:
                type: integer
              accessLevel:
                type: integer
    PackageWorkflow:
      type: string
      enum:
        - continuous
        - emass
    Review:
      type: object
      properties:
        assetId:
          type: integer
        assetName:
          type: string
        ruleId:
          type: string
        result:
          $ref: '#/components/schemas/ReviewResult'
        resultComment:
          type: string
        autoResult:
          type: boolean
        action:
          $ref: '#/components/schemas/ReviewAction'
        actionComment:
          type: string
        status:
          $ref: '#/components/schemas/ReviewStatus'
        userId:
          type: integer
        username:
          type: string
        ts:
          type: string
          readOnly: true
        rejectText:
          description: Ignored unless status='Rejected'
          type: string
        rejectUserId:
          type: integer
          readOnly: true
    ReviewAction:
      type: string
      nullable: true
      enum:
        - remediate
        - mitigate
        - exception
        - null
    ReviewAssetRulePatch:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/ReviewResult'
        resultComment:
          type: string
          nullable: true
        action:
          $ref: '#/components/schemas/ReviewAction'
        actionComment:
          type: string
          nullable: true
        autoResult:
          type: boolean
        status:
          $ref: '#/components/schemas/ReviewStatus'
    ReviewAssetRulePut:
      type: object
      required:
        - result
        - resultComment
      properties:
        result:
          $ref: '#/components/schemas/ReviewResult'
        resultComment:
          type: string
          nullable: true
        action:
          $ref: '#/components/schemas/ReviewAction'
        actionComment:
          type: string
          nullable: true
        autoResult:
          type: boolean
        status:
          $ref: '#/components/schemas/ReviewStatus'
    ReviewCheckType:
      type: string
      enum:
        - scap
        - manual
    ReviewHistory:
      type: object
      properties:
        ts:
          type: string
        activityType:
          type: string
        columnName:
          type: string
        oldValue:
          type: string
        newValue:
          type: string
        userId:
          type: integer
        username:
          type: string
    ReviewProjected:
      allOf:
        - $ref: '#/components/schemas/Review'
        - type: object
          properties:
            asset:
              $ref: '#/components/schemas/AssetBasic'
            stigs:
              type: array
              items:
                type: string
            rule:
              $ref: '#/components/schemas/RuleAbbr'
    ReviewPut:
      type: object
      required:
        - result
        - resultComment
      properties:
        assetId:
          type: integer
        ruleId:
          type: string
        result:
          $ref: '#/components/schemas/ReviewResult'
        resultComment:
          type: string
          nullable: true
        action:
          $ref: '#/components/schemas/ReviewAction'
        actionComment:
          type: string
          nullable: true
        autoResult:
          type: boolean
          nullable: true
        status:
          $ref: '#/components/schemas/ReviewStatus'
    ReviewResult:
      description: The Review result
      type: string
      enum:
        - fail
        - pass
        - notapplicable
    ReviewStatus:
      type: string
      enum:
        - saved
        - submitted
        - accepted
        - rejected
    ReviewWithHistoryProjected:
      allOf:
        - $ref: '#/components/schemas/Review'
        - type: object
          properties:
            history:
              type: array
              items:
                $ref: '#/components/schemas/ReviewHistory'
            asset:
              $ref: '#/components/schemas/AssetBasic'
            stigs:
              type: array
              items:
                type: string
            rule:
              $ref: '#/components/schemas/RuleAbbr'
    Revision:
      type: object
      properties:
        benchmarkId:
          type: string
        revisionStr:
          type: string
        version:
          type: string
        release:
          type: string
        benchmarkDate:
          type: string
        status:
          type: string
        statusDate:
          type: string
        description:
          type: string
    RevisionBasic:
      type: object
      properties:
        benchmarkId:
          type: string
        revisionStr:
          type: string
    Rule:
      type: object
      properties:
        ruleId:
          type: string
        groupId:
          type: string
        groupTitle:
          type: string
        version:
          type: string
        title:
          type: string
        severity:
          type: string
    RuleAbbr:
      type: object
      properties:
        ruleId:
          type: string
        version:
          type: string
        title:
          type: string
        severity:
          type: string
    RuleDetailProjected:
      allOf:
        - $ref: '#/components/schemas/RuleProjected'
        - type: object
          properties:
            cci:
              type: array
              items:
                $ref: '#/components/schemas/CciRuleItem'
            checks:
              type: array
              items:
                $ref: '#/components/schemas/Check'
            fixes:
              type: array
              items:
                $ref: '#/components/schemas/Fix'
    RuleProjected:
      allOf:
        - $ref: '#/components/schemas/Rule'
        - type: object
          properties:
            weight:
              type: string
            vulnDiscussion:
              type: string
            falsePositives:
              type: string
            falseNegatives:
              type: string
            documentable:
              type: string
            mitigations:
              type: string
            securityOverrideGuidance:
              type: string
            potentialImpacts:
              type: string
            thirdPartyTools:
              type: string
            mitigationControl:
              type: string
            responsibility:
              type: string
    RuleSeverity:
      type: string
      enum:
        - high
        - medium
        - low
    STIG:
      type: object
      properties:
        benchmarkId:
          type: string
        lastRevisionStr:
          type: string
        lastRevisionDate:
          type: string
        title:
          type: string
    StigAsset:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/AssetBasic'
    StigAssetBasic:
      type: object
      properties:
        benchmarkId:
          type: string
        assetId:
          type: integer
    StigAssetExtended:
      type: object
      properties:
        benchmarkId:
          type: string
        asset:
          $ref: '#/components/schemas/AssetBasic'
    StigAssetProjected:
      allOf:
        - $ref: '#/components/schemas/AssetBasic'
        - type: object
          properties:
            reviewers:
              type: array
              items:
                $ref: '#/components/schemas/UserBasic'
    User:
      type: object
      properties:
        userId:
          type: integer
          readOnly: true
        username:
          type: string
        display:
          type: string
        email:
          type: string
        metadata:
          type: object
    UserBasic:
      type: object
      properties:
        userId:
          type: integer
          readOnly: true
        username:
          type: string
    UserCreateOrReplace:
      required:
        - username
        - display
        - email
        - privileges
        - grants
      type: object
      properties:
        username:
          type: string
        display:
          type: string
        email:
          type: string
        metadata:
          type: object
        privileges:
          $ref: '#/components/schemas/UserPrivileges'
        grants:
          type: array
          items:
            $ref: '#/components/schemas/PackageGrant'
    UserGrant:
      type: object
      required:
        - userId
        - accessLevel
      additionalProperties: false
      properties:
        userId:
          type: integer
        accessLevel:
          type: integer
          minimum: 1
          maximum: 4
    UserGrantProjected:
      type: object
      additionalProperties: false
      properties:
        user:
          type: object
          properties:
            userId:
              type: integer
            username:
              type: string
        accessLevel:
          type: integer
          minimum: 1
          maximum: 4
    UserPrivileges:
      type: object
      additionalProperties: false
      required:
        - globalAccess
        - canCreatePackage
        - canAdmin
      properties:
        globalAccess:
          type: boolean
        canCreatePackage:
          type: boolean
        canAdmin:
          type: boolean
    
    UserProjected:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            privileges:
              $ref: '#/components/schemas/UserPrivileges'
        - type: object
          properties:
            grants:
              type: array
              items:
                $ref: '#/components/schemas/PackageGrantProjected'
    UserUpdate:
      type: object
      properties:
        username:
          type: string
        display:
          type: string
        email:
          type: string
        metadata:
          type: object
        privileges:
          $ref: '#/components/schemas/UserPrivileges'
        grants:
          type: array
          items:
            $ref: '#/components/schemas/PackageGrant'
  parameters:
    AssetIdPath:
      name: assetId
      in: path
      description: A path parameter that indentifies an Asset
      required: true
      schema:
        type: integer
    AssetIdQuery:
      name: assetId
      in: query
      description: A query parameter that indentifies an Asset
      schema:
        type: integer
    AssetProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - adminStats
            - stigs
            - stigReviewers
    BenchmarkIdPath:
      name: benchmarkId
      in: path
      description: A path parameter that indentifies a STIG
      required: true
      schema:
        type: string
    BenchmarkIdQuery:
      name: benchmarkId
      in: query
      description: A query parameter that indentifies a STIG
      schema:
        type: string
    CciPath:
      name: cci
      in: path
      description: A path parameter that indentifies a CCI
      required: true
      schema:
        type: string
    ChecklistProjectionQuery:
      name: projection
      in: query
      description: >
        Optional properties to return. Selecting "checks" or "fixes" will also
        select "fullrules"
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - cci
            - fullrules
            - checks
            - fixes
    ElevateQuery:
      name: elevate
      in: query
      description: >-
        Elevate the user context for this request if user is permitted
        (canAdmin)
      schema:
        type: boolean
    FindingProjectionQuery:
      name: projection
      in: query
      description: Optional properties to return
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - assets
            - benchmarkIds
            - ccis
            - poamRarSummary
    GroupIdPath:
      name: groupId
      in: path
      description: A path parameter that indentifies a Group
      required: true
      schema:
        type: string
    GroupIdQuery:
      name: groupId
      in: query
      description: A query parameter that indentifies a Group
      schema:
        type: string
    GroupProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - rules
    NameQuery:
      name: name
      in: query
      description: Matches a string anywhere in the object name 
      schema:
        type: string
    PackageIdPath:
      name: packageId
      in: path
      description: A path parameter that indentifies a Package
      required: true
      schema:
        type: integer
    PackageIdQuery:
      name: packageId
      in: query
      description: A query parameter that indentifies a Package
      schema:
        type: integer
    PackageProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - assets
            - stigs
            - grants
    PackageWorkflowQuery:
      name: workflow
      in: query
      description: Match Packages having a specific workflow.
      schema:
        type: string
        enum:
          - continuous
          - emass
    ReviewActionQuery:
      name: action
      in: query
      schema:
        $ref: '#/components/schemas/ReviewAction'
    ReviewIndividualProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - ruleInfo
            - history
            - stigs
            - packages
    ReviewProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - rule
            - stigs
            - asset
    ReviewResultQuery:
      name: result
      in: query
      schema:
        $ref: '#/components/schemas/ReviewResult'
    ReviewStatusQuery:
      name: status
      in: query
      schema:
        $ref: '#/components/schemas/ReviewStatus'
    RevisionStrPath:
      name: revisionStr
      in: path
      description: >-
        A path parameter that indentifies a STIG revision [
        V{version_num}R{release_num} | 'latest' ]
      required: true
      schema:
        pattern: ^(V\d+R\d+(\.\d+)?|latest)$
        type: string
    RuleIdPath:
      name: ruleId
      in: path
      description: A path parameter that indentifies a Rule
      required: true
      schema:
        type: string
    RuleProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - details
            - cci
            - checks
            - fixes
    RulesProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - details
    StigAssetProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - reviewers
    UserAccessLevelQuery:
      name: accessLevel
      in: query
      schema:
        $ref: '#/components/schemas/AccessLevel'
    UserProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - privileges
            - grants
  securitySchemes:
    oauth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: >-
            http://192.168.1.155:8080/auth/realms/stigman/protocol/openid-connect/auth
          scopes:
            stig-manager: Top-accessLevel scope
            'stig-manager:stig': Full access to the STIG collection
            'stig-manager:stig:read': Read access to the STIG collection
            'stig-manager:package': Full access to the Package collection
            'stig-manager:package:read': Read-only access to the Package collection
            'stig-manager:user': Full access to the Users collection
            'stig-manager:user:read': Read-only access to the Users collection
